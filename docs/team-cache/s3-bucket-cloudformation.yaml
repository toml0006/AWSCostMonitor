AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWSCostMonitor Team Cache S3 Bucket Setup with Security Best Practices'

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket for team cache
    AllowedPattern: ^[a-z0-9][a-z0-9-]*[a-z0-9]$
    ConstraintDescription: Must be a valid S3 bucket name
    MinLength: 3
    MaxLength: 63
  
  EnableKMSEncryption:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Enable KMS encryption instead of SSE-S3
  
  KMSKeyArn:
    Type: String
    Default: ''
    Description: ARN of the KMS key for encryption (required if EnableKMSEncryption is true)
  
  TeamAccountIds:
    Type: CommaDelimitedList
    Description: Comma-separated list of AWS account IDs that can access the team cache
    Default: ''

Conditions:
  UseKMSEncryption: !Equals [!Ref EnableKMSEncryption, 'true']
  HasTeamAccounts: !Not [!Equals [!Join ['', !Ref TeamAccountIds], '']]

Resources:
  TeamCacheBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !If [UseKMSEncryption, 'aws:kms', 'AES256']
              KMSMasterKeyID: !If [UseKMSEncryption, !Ref KMSKeyArn, !Ref AWS::NoValue]
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldCacheEntries
            Status: Enabled
            ExpirationInDays: 30
            Prefix: awscost-team-cache/
          - Id: DeleteIncompleteMultipartUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref AuditLogBucket
        LogFilePrefix: team-cache-access/
      Tags:
        - Key: Purpose
          Value: AWSCostMonitor-TeamCache
        - Key: ManagedBy
          Value: CloudFormation

  AuditLogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${BucketName}-audit-logs'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldLogs
            Status: Enabled
            ExpirationInDays: 90
            Prefix: team-cache-access/
      Tags:
        - Key: Purpose
          Value: AWSCostMonitor-AuditLogs
        - Key: ManagedBy
          Value: CloudFormation

  TeamCacheBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: HasTeamAccounts
    Properties:
      Bucket: !Ref TeamCacheBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: DenyInsecureTransport
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !GetAtt TeamCacheBucket.Arn
              - !Sub '${TeamCacheBucket.Arn}/*'
            Condition:
              Bool:
                'aws:SecureTransport': false
          - Sid: CrossAccountAccess
            Effect: Allow
            Principal:
              AWS: !Split
                - ','
                - !Sub
                  - 'arn:aws:iam::${InnerItem}:root,arn:aws:iam::${InnerItem}:root'
                  - InnerItem: !Join
                    - ':root,arn:aws:iam::'
                    - !Ref TeamAccountIds
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:DeleteObject'
              - 's3:HeadObject'
            Resource: !Sub '${TeamCacheBucket.Arn}/awscost-team-cache/*'
          - Sid: CrossAccountList
            Effect: Allow
            Principal:
              AWS: !Split
                - ','
                - !Sub
                  - 'arn:aws:iam::${InnerItem}:root,arn:aws:iam::${InnerItem}:root'
                  - InnerItem: !Join
                    - ':root,arn:aws:iam::'
                    - !Ref TeamAccountIds
            Action:
              - 's3:ListBucket'
              - 's3:GetBucketLocation'
              - 's3:GetBucketVersioning'
              - 's3:GetBucketEncryption'
            Resource: !GetAtt TeamCacheBucket.Arn
            Condition:
              StringLike:
                's3:prefix': 'awscost-team-cache/*'

  TeamCacheIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'AWSCostMonitor-TeamCache-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: TeamCacheS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: S3Access
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 's3:HeadObject'
                Resource: !Sub '${TeamCacheBucket.Arn}/awscost-team-cache/*'
              - Sid: S3List
                Effect: Allow
                Action:
                  - 's3:ListBucket'
                  - 's3:GetBucketLocation'
                  - 's3:GetBucketVersioning'
                  - 's3:GetBucketEncryption'
                  - 's3:HeadBucket'
                Resource: !GetAtt TeamCacheBucket.Arn
              - !If
                - UseKMSEncryption
                - Sid: KMSAccess
                  Effect: Allow
                  Action:
                    - 'kms:Decrypt'
                    - 'kms:Encrypt'
                    - 'kms:ReEncrypt*'
                    - 'kms:GenerateDataKey*'
                    - 'kms:DescribeKey'
                  Resource: !Ref KMSKeyArn
                  Condition:
                    StringEquals:
                      'kms:ViaService': !Sub 's3.${AWS::Region}.amazonaws.com'
                - !Ref AWS::NoValue
      Tags:
        - Key: Purpose
          Value: AWSCostMonitor-TeamCache
        - Key: ManagedBy
          Value: CloudFormation

Outputs:
  BucketName:
    Description: Name of the team cache S3 bucket
    Value: !Ref TeamCacheBucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'
  
  BucketArn:
    Description: ARN of the team cache S3 bucket
    Value: !GetAtt TeamCacheBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-BucketArn'
  
  AuditLogBucketName:
    Description: Name of the audit log bucket
    Value: !Ref AuditLogBucket
    Export:
      Name: !Sub '${AWS::StackName}-AuditLogBucket'
  
  IAMRoleArn:
    Description: ARN of the IAM role for team cache access
    Value: !GetAtt TeamCacheIAMRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-IAMRoleArn'
  
  BucketRegion:
    Description: Region of the team cache bucket
    Value: !Ref AWS::Region
    Export:
      Name: !Sub '${AWS::StackName}-BucketRegion'